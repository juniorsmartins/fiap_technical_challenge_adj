server:
  port: ${SERVER_PORT:9050}

spring:

  application:
    name: challenge_user

  profiles:
    active: default

---
spring:
  config:
    activate:
      on-profile: default

  docker:
    compose:
      file: /home/juniorsmartins/Workspace/fiap_technical_challenge_adj/docker/docker-compose.yml

  datasource: # Configura o datasource do banco de dados.
    driver-class-name: org.postgresql.Driver # Especifica o driver JDBC (neste caso, para Postgres).
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:challenge_user} # Define a URL de conexao ao banco.
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}

  jpa: # Configura o JPA/Hibernate.
    database: POSTGRESQL # Especifica o banco usado.
    hibernate:
      ddl-auto: create-drop # Define como o Hibernate gerencia o esquema do banco (usar none em producao).
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl # Define a estrategia de nomeacao de tabelas/colunas.
    properties:
      hibernate: # Configuracoes avancadas do Hibernate.
#        dialect: org.hibernate.dialect.PostgreSQLDialect
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
        format_sql: true # Formata as queries SQL para facilitar leitura.
        use_sql_comments: true # Adiciona comentarios nas queries geradas.
        connection: # Define o nivel de isolamento de transacao.
          isolation: 2 # 2 - READ_COMMITTED
        cache:
          use_second_level_cache: false # Habilita cache de segundo nivel
          use_query_cache: false # Habilita cache de query.
        type:
          enumType:
            type: pgsql_enum # Personalizacao para usar enums
        jdbc:
          log:
            non_contextual_creation: true # Ajuda a rastrear conexoes criadas fora do contexto transacional (pode desligar em producao).
    open-in-view: false #  Define se o Hibernate deve manter a sessao aberta durante a renderizacao da view. O false e recomendado para evitar problemas de performance e lazy loading.
    show-sql: true

  sql: # Esta propriedade controla quando e como o Spring Boot inicializa o banco de dados com scripts SQL
    init:
      mode: always
      data-locations: classpath:db/import.sql

springdoc: # swagger-ui custom path
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html



